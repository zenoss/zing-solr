version: "3.3"
services:
  solr:
    image: ${SERVICE_IMAGE}:${IMAGE_TAG:-dev}
    build:
      context: .
      labels:
        zenoss.zing.commit-sha: ${COMMIT_SHA:-none}
        zenoss.zing.pull-request: ${PULL_REQUEST:-none}
        zenoss.zing.branch_name: ${GIT_BRANCH:-none}
        zenoss.zing.build_number: ${BUILD_ID:-none}
        zenoss.zing.build_url: ${BUILD_URL:-none}
    command: init-solr.sh start-solr.sh -verbose -f -cloud
    healthcheck:
      test: >-
        curl -s -A 'healthcheck'  http://localhost:8983/solr/metric-catalog/admin/ping?wt=json \
        | grep -q '"status":"OK"'
    ports:
    - 8983:8983 # solr
    - 9983:9983 # embedded ZK
    environment:
      # ZK_HOST indicates the ZK nodes and optionally chroot
      # If not set, it indicates that embedded ZK should be used.
      #- ZK_HOST=zk1,zl2,zk3/solr
      # When using embedded zk, the zk chroot can still be specified
      # via the ZK_CHROOT variable.  Ignored otherwise. 
      - ZK_CHROOT=/solr
  hdfs-datanode:
    image: registry.zing.zenoss.eng/zenosszing/zing-hdfs
    command: datanode
    environment:
      CLUSTER_NAME: hdfs-namenode
      CONFIG_TYPE: dev
    volumes:
    - hdfs_dn:/data/hdfs/dn:rw
  hdfs-namenode:
    image: registry.zing.zenoss.eng/zenosszing/zing-hdfs
    command: namenode
    environment:
      CLUSTER_NAME: hdfs-namenode
      CONFIG_TYPE: dev
    volumes:
    - hdfs_nn:/data/hdfs/nn:rw
volumes:
  hdfs_dn: {}
  hdfs_nn: {}
